% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pulse_heart.R
\name{pulse_heart}
\alias{pulse_heart}
\title{Determine the heartbeat rate in all channels of a split PULSE object (\verb{STEP 4})}
\usage{
pulse_heart(pulse_data_split, with_progress = NULL, msg = TRUE)
}
\arguments{
\item{pulse_data_split}{The output of \code{\link[=pulse_split]{pulse_split()}}, i.e., a list with PULSE data split across time windows, each window being a subset of \code{pulse_data} (a tibble with at least 2 columns (time + one or more channels) containing PULSE data with timestamps within that time window)}

\item{with_progress}{One of \code{TRUE}, \code{FALSE} or \code{NULL} (default) to choose whether to show progress bars or not (based on the \code{progressr} package). \code{TRUE} prints a \code{cli}-style progress bar; \code{FALSE} disables progress bars altogether; if set to \code{NULL}, the behavior is controlled by the user from outside this function (by setting the desired \code{handlers()}; in addition, setting \code{handlers(global = TRUE)} ensures the same behavior is used across the entire session).}

\item{msg}{A logical to decide if non-crucial messages (but not errors) are shown (defaults to \code{TRUE}; mainly for use from within the wrapper function \code{PULSE()}, where it is set to \code{FALSE} to avoid the repetition of identical messages)}
}
\value{
A tibble with nrows = (number of channels) * (number of windows in \code{pulse_data_split}) and 6 columns:
\itemize{
\item \code{id}, PULSE channel IDs
\item \code{time}, time at the center of each time window
\item \code{data}, a list of tibbles with raw PULSE data for each combination of channel and window, with columns \code{time}, \code{val} and \code{peak} (\code{TRUE} in rows corresponding to wave peaks)
\item \code{n},   number of wave peaks identified
\item \code{sd},  standard deviation of the intervals between wave peaks
\item \code{hz},  heartbeat rate estimate (in Hz)
\item \code{ci},  confidence interval (hz Â± ci)
}
}
\description{
\itemize{
\item \verb{step 1} -- \code{\link[=pulse_read]{pulse_read()}}
\item \verb{step 2} -- \code{\link[=pulse_split]{pulse_split()}}
\item \verb{step 3} -- \code{\link[=pulse_optimize]{pulse_optimize()}}
\item \strong{\verb{-->>} step 4 -- \code{\link[=pulse_heart]{pulse_heart()}} \verb{<<--}}
\item \verb{step 5} -- \code{\link[=pulse_check]{pulse_check()}}
}

For each combination of channel and time window, determine the heartbeat rate automatically.

\code{pulse_heart()} takes the output from a call to \code{pulse_optimize()} (or \code{pulse_split()} if optimization is skipped - highly discouraged) and employs an algorithm optimized for the identification of wave peaks in noisy data to determine the heartbeat rate in all channels of the PULSE dataset.
}
\section{BPM}{

To convert to Beats Per Minute, simply multiply \code{hz} and \code{ci} by 60.
}

\examples{
# Begin prepare data ----
pulse_data_sub <- pulse_data
pulse_data_sub$data <- pulse_data_sub$data[,1:5]
pulse_data_split <- pulse_split(
   pulse_data_sub,
   window_width_secs = 30,
   window_shift_secs = 60,
   min_data_points = 0.8,
   with_progress = TRUE)
pulse_data_split <- pulse_optimize(pulse_data_split)
# End prepare data ----

# Determine heartbeat rates in all channels in all time window
pulse_heart(pulse_data_split)
}
\seealso{
\itemize{
\item check \code{\link[progressr:handlers]{progressr::handlers()}} to customize the reporting of progress
\item check \code{\link[future:plan]{future::plan()}} to optimize parallel processing
\item \code{\link[=pulse_find_peaks_all_channels]{pulse_find_peaks_all_channels()}} runs \code{\link[=pulse_find_peaks_one_channel]{pulse_find_peaks_one_channel()}} on all PULSE channels
\item \code{\link[=pulse_read]{pulse_read()}}, \code{\link[=pulse_split]{pulse_split()}} and \code{\link[=pulse_optimize]{pulse_optimize()}} are the other functions needed for the complete PULSE processing workflow
\item \code{\link[=PULSE]{PULSE()}} is a wrapper function that executes all the steps needed to process PULSE data at once
\item \code{\link[=pulse_summarise]{pulse_summarise()}} can be used to reduce the number of data points returned
}
}
