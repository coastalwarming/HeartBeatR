% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pulse_main.R
\name{PULSE_by_file}
\alias{PULSE_by_file}
\title{Process PULSE data file by file  (\verb{STEPS 1-5})}
\usage{
PULSE_by_file(
  folder,
  allow_dir_create = FALSE,
  chunks = 3,
  bind_data = TRUE,
  window_width_secs,
  window_shift_secs,
  min_data_points = 0.8,
  interpolation_freq = 40,
  bandwidth = 0.2,
  N = 3,
  SD = 0.5,
  raw_v_smoothed = TRUE,
  correct = TRUE,
  with_progress = NULL,
  discard_channels = NULL,
  msg = TRUE
)
}
\arguments{
\item{folder}{The path to a folder where several PULSE files are stored}

\item{allow_dir_create}{Logical, defaults to FALSE. Only when set to TRUE does \code{PULSE_by_file()} actually do anything. This is to force the user to accept that a job_folder will be created inside of the \code{folder} supplied - without this folder \code{PULSE_by_file()} cannot operate. It is STRONGLY advised to maintain a copy of the dataset being processed to avoid any inadvertent data loss. By setting \code{allow_dir_create} to TRUE the user is taking responsibility for the management of their files.}

\item{chunks}{Numeric, defaults to 3; Corresponds to the number of files processed at once during each \code{for} cycle; higher numbers result in a quicker and more efficient operation, but shouldn't be set too high, as otherwise the system may become overwhelmed once more (which is what \code{PULSE_by_file()} is designed to avoid).}

\item{bind_data}{Logical, defaults to TRUE. If set to TRUE, after processing all chunks, \code{PULSE_by_file()} will try to read all files in the job_folder and return a single unified tibble with all data. Please be aware that there's a possibility that if the dataset is very large, the machine may become overwhelmed and crash due to lack of memory (still, all files stored in the job_folder will remain intact). If set to FALSE, \code{PULSE_by_file()} will return nothing after completing the processing of all files in the dataset, and the user must instead manually handle the reading and collating of all processed data in the job_folder.}

\item{window_width_secs}{A single numeric value indicating the width of the time windows (in seconds) over which heart rate frequency will later be computed.}

\item{window_shift_secs}{A single numeric value indicating by how much each subsequent window is shifted from the preceding one (in seconds).}

\item{min_data_points}{A single numeric value, expressed as a ratio \verb{[0, 1]}, used as a threshold to discard windows where data is missing (e.g., if the sampling frequency is \code{20} and \code{window_width_secs = 30}, each window should include \code{600} data points, and so if \code{min_data_points = 0.8}, windows with less than \code{600 * 0.8 = 480} data points will be rejected).}

\item{interpolation_freq}{A numeric value expressing the frequency (in Hz) to which PULSE data should be interpolated. Can be set to \code{0} (zero) or any value equal or greater than \code{40} (the default). If set to zero, no interpolation is performed.}

\item{bandwidth}{A numeric value expressing the bandwidth. If equal to \code{0} (zero) no smoothing is applied. Ideally kept low (defaults to \code{0.2}) so that only very high frequency noise is removed, but can be pushed up all the way to \code{1} or above (especially when the heartbeat rate is expected to be slow, as is typical of oysters, but double check the resulting data). Type \code{?ksmooth} for additional info.}

\item{N}{Minimum number of peaks detected in each time window for it to be considered a "keep" (defaults to \code{3})}

\item{SD}{Maximum value for the sd of the time intervals between each peak detected for it to be considered a "keep" (defaults to \code{0.5})}

\item{raw_v_smoothed}{Logical. If set to \code{FALSE} (default), the output includes only one list obtained after applying interpolation and smoothing according to the values set. If set to \code{TRUE}, a list with two lists is returned, one after applying only interpolation (i.e., "raw"), and the other after applying both interpolation and smoothing (i.e, "smoothed"). Mostly used for supplying downstream functions with more robust information.}

\item{correct}{Logical. If \code{FALSE}, data points with \code{hz} values likely double the real value are flagged \strong{BUT NOT CORRECTED}. If \code{TRUE}, \code{hz} (as well as \code{data}, \code{n}, \code{sd} and \code{ci}) are corrected accordingly. Note that the correction is not reversible! (defaults to \code{TRUE})}

\item{with_progress}{One of \code{TRUE}, \code{FALSE} or \code{NULL} (default) to choose whether to show progress bars or not (based on the \code{progressr} package). \code{TRUE} prints a \code{cli}-style progress bar; \code{FALSE} disables progress bars altogether; if set to \code{NULL}, the behavior is controlled by the user from outside this function (by setting the desired \code{handlers()}; in addition, setting \code{handlers(global = TRUE)} ensures the same behavior is used across the entire session).}

\item{discard_channels}{A string with the names of channels to be discarded from the analysis. \code{discard_channels} is forced to lowercase, but other than that, the \strong{exact} names must be provided. Discarding unused channels can greatly speed the workflow!}

\item{msg}{A logical to decide if non-crucial messages (but not errors) are shown (defaults to \code{TRUE}; mainly for use from within the wrapper function \code{PULSE()}, where it is set to \code{FALSE} to avoid the repetition of identical messages)}
}
\description{
This function runs \code{PULSE()} file by file, instead of attempting to read all files at once. This is required when dataset are too large (more than 20-30 files), as otherwise the system may become stuck due to the amount of data that needs to be kept in the memory. Because the results of processing data for each hourly file in the dataset are saved to a \code{job_folder}, \code{PULSE_by_file()} has the added benefit of allowing the entire job to be stopped and resumed, facilitating the advance in the processing even if a crash occurs.
}
\examples{
##
}
\seealso{
\code{\link[=PULSE]{PULSE()}}
}
